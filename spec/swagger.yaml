definitions:
  model.AddBinaryRequest:
    properties:
      a:
        example: "1101"
        type: string
      b:
        example: "11"
        type: string
    required:
    - a
    - b
    type: object
  model.BadRequestResult:
    properties:
      code:
        example: 400
        type: integer
      status:
        example: BAD REQUEST
        type: string
    type: object
  model.ContainsDuplicateRequest:
    properties:
      a:
        example:
        - 1
        - 2
        - 3
        - 1
        items:
          type: integer
        type: array
    required:
    - a
    type: object
  model.IsPalindromeRequest:
    properties:
      a:
        example: 'A man, a plan, a canal: Panama'
        type: string
    required:
    - a
    type: object
  model.IsPowerOfTwoRequest:
    properties:
      a:
        example: 12
        type: integer
    required:
    - a
    type: object
  model.RomanToIntRequest:
    properties:
      a:
        example: III
        type: string
    required:
    - a
    type: object
  model.SuccessResult:
    properties:
      code:
        example: 200
        type: integer
      data: {}
      status:
        example: Ok
        type: string
    type: object
info:
  contact: {}
  description: The purpose of this application is to provide an API for handy tools
    to solve trivial daily life problems.
  termsOfService: http://swagger.io/terms/
  title: Digiutilsapi Specification
paths:
  /add_binary:
    post:
      consumes:
      - application/json
      operationId: add-binary
      parameters:
      - description: Add Binary
        in: body
        name: AddBinaryRequest
        required: true
        schema:
          $ref: '#/definitions/model.AddBinaryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SuccessResult'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.BadRequestResult'
  /contains_duplicate:
    post:
      consumes:
      - application/json
      operationId: contains-duplicate
      parameters:
      - description: Contains Duplicate
        in: body
        name: ContainsDuplicateRequest
        required: true
        schema:
          $ref: '#/definitions/model.ContainsDuplicateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SuccessResult'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.BadRequestResult'
  /is_palindrome:
    post:
      consumes:
      - application/json
      operationId: is-palindrome
      parameters:
      - description: Is Palindrome
        in: body
        name: IsPalindromeRequest
        required: true
        schema:
          $ref: '#/definitions/model.IsPalindromeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SuccessResult'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.BadRequestResult'
  /is_power_of_two:
    post:
      consumes:
      - application/json
      operationId: is-power-of-two
      parameters:
      - description: Is Power of Two
        in: body
        name: IsPowerOfTwoRequest
        required: true
        schema:
          $ref: '#/definitions/model.IsPowerOfTwoRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SuccessResult'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.BadRequestResult'
  /roman_to_int:
    post:
      consumes:
      - application/json
      operationId: roman-to-int
      parameters:
      - description: Roman to Int
        in: body
        name: RomanToIntRequest
        required: true
        schema:
          $ref: '#/definitions/model.RomanToIntRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SuccessResult'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.BadRequestResult'
swagger: "2.0"
